.robot-container {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  max-width: 100%;
  height: 100%;
  padding: 2rem;
}

.robot-face-shape {
  --wide: 500px;
  --high: 500px;

  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  width: var(--wide);
  height: var(--high);
  border: 7px solid #dbdbdb;
  border-radius: 2rem;
  background-image: linear-gradient(#21222c, #8b93e96e, #8b93e9);
  background-color: #21222c17;
}

.robot-eye-left {
  position: absolute;
  width: calc(var(--wide) / 7);
  height: calc(var(--high) / 6);
  top: 150px;
  left: 90px;
  box-sizing: content-box;
  border-width: 50px 18px 0;
  border-style: solid;
  border-color: #d6d854 transparent;
}

.robot-eye-right {
  font-size: 8em;
  display: inline-block;
  width: 0.4em;
  box-sizing: content-box;
  height: 0.4em;
  border: 0.1em solid red;
  position: absolute;
  top: 130px;
  right: 95px;
  border-radius: 0.35em;
}

.robot-eye-right::before {
  content: "";
  display: inline-block;
  position: absolute;
  right: -0.25em;
  bottom: -0.1em;
  border-width: 0;
  background: red;
  width: 0.35em;
  height: 0.08em;
  transform: rotate(45deg);
}

.robot-ear-left {
  position: relative;
  width: 8rem;
  height: 12rem;
  left: -290px;
  background: #65ff36;
  background-image: url(https://picsum.photos/200/300);
  background-size: cover;
  -moz-border-radius: 10px;
  -webkit-border-radius: 10px;
  border-radius: 10px;
  z-index: 1;
}

.robot-ear-left::before {
  content: "";
  position: absolute;
  left: 100%;
  top: 50%;
  width: 0;
  height: 0;
  border-top: 13px solid transparent;
  border-right: 26px solid #65ff36;
  border-bottom: 13px solid transparent;
  transform: translateY(-50%) rotate(180deg);
}

.robot-ear-right {
  position: relative;
  width: 120px;
  height: 200px;
  right: -290px;
  background: #3694ff;
  -moz-border-radius: 10px;
  -webkit-border-radius: 10px;
  border-radius: 10px;
  z-index: -1;
}

.robot-ear-right::after {
  content: "";
  position: absolute;
  right: 100%;
  top: 50%;
  width: 0;
  height: 0;
  border-top: 13px solid transparent;
  border-right: 26px solid #3694ff;
  border-bottom: 13px solid transparent;
  transform: translateY(-50%);
}

.robot-nose {
  --c: #96427d;

  position: absolute;
  left: 50%;
  top: 50%;
  height: 100px;
  aspect-ratio: 1;
  box-shadow: 0 0 0 35px inset var(--c);
  border-image: conic-gradient(var(--c) 0 0) 50% / calc(50% - 15px);
  clip-path: circle(); /* remove this if you don't want a rounded shape */
  rotate: 45deg;
  transform: translate(-50%);
}

.robot-teeth {
  --s: 50px; /* control the size of the grid */
  --n: 2; /* control the granularity */
  --t: 2px; /* the thickness */
  --g: 8px; /* the gap between dashes */

  position: relative;
  display: flex;
  flex-direction: row;
  row-gap: 5px;
  column-gap: 5px;
  margin-top: 290px;
  overflow: hidden;

  --c: #556270 25%, #0000 0;
  background: conic-gradient(at var(--g) var(--t), var(--c))
      calc((var(--s) / var(--n) - var(--g) + var(--t)) / 2) 0 /
      calc(var(--s) / var(--n)) var(--s),
    conic-gradient(from 180deg at var(--t) var(--g), var(--c)) 0
      calc((var(--s) / var(--n) - var(--g) + var(--t)) / 2) / var(--s)
      calc(var(--s) / var(--n));
  /* you probably don't need to set any size in your case */
  width: calc(round(down, 70%, var(--s)) + var(--t));
  height: calc(2 * var(--s) + var(--t));
}

.robot-tooth {
  --r: 30px; /* the radius */
  --s: -1px; /* size of inner curve */
  --x: 10px; /* horizontal offset (no percentane) */
  --y: 10px; /* vertical offset (no percentage) */

  width: 20px;
  aspect-ratio: 1;
  background: #3fb8af;
  border-radius: var(--r);
  --_m: /calc(2 * var(--r)) calc(2 * var(--r)) radial-gradient(#000 70%, #0000
        72%);
  --_g: conic-gradient(
    from 90deg at calc(100% - var(--r)) calc(100% - var(--r)),
    #0000 25%,
    #000 0
  );
  --_d: (var(--s) + var(--r));
  mask: calc(100% - var(--_d) - var(--x)) 100% var(--_m),
    100% calc(100% - var(--_d) - var(--y)) var(--_m),
    radial-gradient(var(--s) at 100% 100%, #0000 99%, #000 calc(100% + 1px))
      calc(-1 * var(--r) - var(--x)) calc(-1 * var(--r) - var(--y)),
    var(--_g) calc(-1 * var(--_d) - var(--x)) 0,
    var(--_g) 0 calc(-1 * var(--_d) - var(--y));
  mask-repeat: no-repeat;
}

.robot-hair-style {
  position: absolute;
  margin-bottom: 700px;
  width: 450px;
  height: 150px;
  overflow: hidden;
}

.robot-hair-one {
  --s: 24px; /* size of the wave */
  --b: 6px; /* thickness of the line */
  --m: 0.2; /* curvature of the wave [0 2] */

  background: #008c9e;
  --R: calc(var(--s) * sqrt(var(--m) * var(--m) + 1) + var(--b) / 2);
  height: calc(2 * var(--R));
  width: 100%;
  --_g: #0000 calc(99% - var(--b)), #000 calc(101% - var(--b)) 99%, #0000 101%;
  mask: radial-gradient(
        var(--R) at left 50% bottom calc(-1 * var(--m) * var(--s)),
        var(--_g)
      )
      calc(50% - 2 * var(--s)) calc(50% - var(--s) / 2 - var(--b) / 2) /
      calc(4 * var(--s)) calc(var(--s) + var(--b)) repeat-x,
    radial-gradient(
        var(--R) at left 50% top calc(-1 * var(--m) * var(--s)),
        var(--_g)
      )
      50% calc(50% + var(--s) / 2 + var(--b) / 2) / calc(4 * var(--s))
      calc(var(--s) + var(--b)) repeat-x;
}

.robot-hair-two {
  --s: 34px; /* size of the wave */
  --b: 6px; /* thickness of the line */
  --m: 0.2; /* curvature of the wave [0 2] */

  background: #00649e;
  --R: calc(var(--s) * sqrt(var(--m) * var(--m) + 1) + var(--b) / 2);
  height: calc(2 * var(--R));
  width: 100%;
  --_g: #0000 calc(99% - var(--b)), #000 calc(101% - var(--b)) 99%, #0000 101%;
  mask: radial-gradient(
        var(--R) at left 50% bottom calc(-1 * var(--m) * var(--s)),
        var(--_g)
      )
      calc(50% - 2 * var(--s)) calc(50% - var(--s) / 2 - var(--b) / 2) /
      calc(4 * var(--s)) calc(var(--s) + var(--b)) repeat-x,
    radial-gradient(
        var(--R) at left 50% top calc(-1 * var(--m) * var(--s)),
        var(--_g)
      )
      50% calc(50% + var(--s) / 2 + var(--b) / 2) / calc(4 * var(--s))
      calc(var(--s) + var(--b)) repeat-x;
}

.robot-hair-three {
  --s: 14px; /* size of the wave */
  --b: 6px; /* thickness of the line */
  --m: 0.1; /* curvature of the wave [0 2] */

  background: #009e69;
  --R: calc(var(--s) * sqrt(var(--m) * var(--m) + 1) + var(--b) / 2);
  height: calc(2 * var(--R));
  width: 100%;
  --_g: #0000 calc(99% - var(--b)), #000 calc(101% - var(--b)) 99%, #0000 101%;
  mask: radial-gradient(
        var(--R) at left 50% bottom calc(-1 * var(--m) * var(--s)),
        var(--_g)
      )
      calc(50% - 2 * var(--s)) calc(50% - var(--s) / 2 - var(--b) / 2) /
      calc(4 * var(--s)) calc(var(--s) + var(--b)) repeat-x,
    radial-gradient(
        var(--R) at left 50% top calc(-1 * var(--m) * var(--s)),
        var(--_g)
      )
      50% calc(50% + var(--s) / 2 + var(--b) / 2) / calc(4 * var(--s))
      calc(var(--s) + var(--b)) repeat-x;
}
